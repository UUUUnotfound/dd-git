#---------------------------------------------------
# Netflow Connection pool Configuration
#---------------------------------------------------
# Internal: Number of connections to the Probe GW's internal DataBase (MySQL DB)
probe.netflow.maxConnection = 20

# how long (ms) a connection is active
probe.netflow.heldTimeoutConnection = 7200000

# monitor of connection pool interval
probe.netflow.monitor.interval = 60000

#---------------------------------------------------
# SQL\JDBC configuration file for netlinks
#---------------------------------------------------

#JDBC.Driver = org.gjt.mm.mysql.Driver
JDBC.Driver = org.postgresql.Driver
JDBC.URI = jdbc:postgresql://localhost/dataflowprobe
JDBC.abort.on.error = true
JDBC.Shutdown.Command=
JDBC.User=mamprobe
JDBC.Password=

#---------------------------------------------------
# Error codes\msgs
#---------------------------------------------------
SQL.Duplicate.Error = 1062/23000 Duplicate entry
SQL.Index.NotFound.Error = 1091/42000
SQL.Table.Unknown.Error = Unknown table
SQL.Table.Exists.Error = already exists

#---------------------------------------------------
# General syntax variations
#---------------------------------------------------
SQL.Syntax.Bitwise.And=col & x

#---------------------------------------------------
# Schema Create\Drop
#---------------------------------------------------

# V1
#

SQL.Add.RawV1 = INSERT INTO Raw_V1 ( RouterIP, SysUptime, Secs, Nsecs,		\
				     SrcAddr, DstAddr, NextHop, Input, Output,	\
				     dPkts, dOctets, aFirst, aLast,		\
				     SrcPort, DstPort, Prot, TOS, Flags )	\
				   VALUES( ?, ?, ?, ?, ?, ?, ?, ?, ?,		\
					   ?, ?, ?, ?, ?, ?, ?, ?, ? );


# V5
#

SQL.RawV5.Truncate = TRUNCATE TABLE Raw_V5;
SQL.RawV5.Count = SELECT COUNT(*) FROM Raw_V5;
SQL.Add.RawV5 = \
   WITH new_values ( RouterIP, SysUptime, Secs, Nsecs,		\
                     Flow_Sequence, Engine_Type, Engine_ID,	\
                     SrcAddr, DstAddr, NextHop, Input, Output,	\
                     dPkts, dOctets, aFirst, aLast,		\
                     SrcPort, DstPort, Tcp_Flags, Prot, TOS,	\
                     Src_As, Dst_As, Src_Mask, Dst_Mask, Stamp)  \
  AS (VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,	?, ?, ?, ?, ?, ?, ? , now())), \
  upsert AS (UPDATE Raw_V5 p \
  SET RouterIP = nv.RouterIP, SysUptime=nv.SysUptime, Secs=nv.Secs, Nsecs=nv.Nsecs,		\
                           Flow_Sequence=nv.Flow_Sequence, Engine_Type=nv.Engine_Type, Engine_ID=nv.Engine_ID,	\
                           NextHop=nv.NextHop, Input=nv.Input, Output=nv.Output,	\
                           dPkts=nv.dPkts, dOctets=nv.dOctets, aFirst=nv.aFirst, aLast=nv.aLast,		\
                           Tcp_Flags=nv.Tcp_Flags, TOS=nv.TOS,	\
                           Src_As=nv.Src_As, Dst_As=nv.Dst_As, Src_Mask=nv.Src_Mask, Dst_Mask=nv.Dst_Mask, Stamp=nv.Stamp \
  FROM new_values AS nv \
  WHERE p.DstAddr = nv.DstAddr AND p.DstPort = nv.DstPort AND p.Prot = nv.Prot \
   AND p.SrcAddr = nv.SrcAddr AND p.SrcPort = nv.SrcPort \
  RETURNING p.DstAddr) \
  INSERT INTO Raw_V5 ( RouterIP, SysUptime, Secs, Nsecs,		\
                        Flow_Sequence, Engine_Type, Engine_ID,	\
                        SrcAddr, DstAddr, NextHop, Input, Output,	\
                        dPkts, dOctets, aFirst, aLast,		\
                        SrcPort, DstPort, Tcp_Flags, Prot, TOS,	\
                        Src_As, Dst_As, Src_Mask, Dst_Mask, Stamp)  \
  SELECT RouterIP, SysUptime, Secs, Nsecs,		\
                              Flow_Sequence, Engine_Type, Engine_ID,	\
                              SrcAddr, DstAddr, NextHop, Input, Output,	\
                              dPkts, dOctets, aFirst, aLast,		\
                              SrcPort, DstPort, Tcp_Flags, Prot, TOS,	\
                              Src_As, Dst_As, Src_Mask, Dst_Mask, Stamp \
  FROM new_values WHERE NOT EXISTS (SELECT 1 from upsert)

# V7
#

SQL.Add.RawV7 = INSERT INTO Raw_V5 ( RouterIP, SysUptime, Secs, Nsecs,		\
				     Flow_Sequence,				\
				     SrcAddr, DstAddr, NextHop, Input, Output,	\
				     dPkts, dOctets, aFirst, aLast,		\
				     SrcPort, DstPort, Flags, Tcp_Flags,	\
				     Prot, TOS,					\
				     Src_As, Dst_As, Src_Mask, Dst_Mask,	\
				     Flags1, Router_SC )			\
				   VALUES( ?, ?, ?, ?, ?, ?, ?, ?, ?,		\
					   ?, ?, ?, ?, ?, ?, ?, ?, ?,		\
					   ?, ?, ?, ?, ?, ?, ?, ? );


# V8
#

SQL.Add.RawV8.AS = \
  INSERT INTO Raw_V8_AS ( RouterIP, SysUptime, Secs, Nsecs,	    \
		          Flow_Sequence, Engine_Type, Engine_ID,    \
		          Flows, dPkts, dOctets, aFirst, aLast,	    \
			  Src_As, Dst_As, Input, Output 	    \
		        )					    \
		        VALUES( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, \
                                ?, ?, ?, ? );

#------------------------------------------
# TEMP raw tables for aggregation
#
# The ### will be replaced by
# SQL.Raw_V5_Temp.Prefix + seq. number
#------------------------------------------
SQL.Raw_V5_Temp.Prefix = Raw_V5_Temp_

SQL.Add.RawV5Temp = INSERT INTO ### SELECT * FROM Raw_V5;
SQL.Raw_V5_Temp.Select = SELECT * FROM ###;
SQL.Raw_V5_Temp.Drop = DROP TABLE IF EXISTS ###;
SQL.Create.Temp.RawV5 = CREATE TABLE ### ( like agg_v5 INCLUDING CONSTRAINTS INCLUDING INDEXES);


#SQL.Raw_V5.Rename = ALTER TABLE raw_v5 RENAME TO ###;

#------------------------------------------
# Aggregation tables and statements
#------------------------------------------
SQL.AggV5.Count = SELECT COUNT(*) FROM Agg_V5;
SQL.AggV5.Update = UPDATE Agg_V5 SET \
dPkts=dPkts+?,dOctets=dOctets+?, \
aFirst=LEAST(aFirst,?),aLast=GREATEST(aLast,?), \
tcp_flags=tcp_flags|?, SysUptime=GREATEST(SysUptime,?), \
Secs=GREATEST(Secs,?),Nsecs=GREATEST(Nsecs,?) \
WHERE RouterIP=? AND SrcAddr=? AND SrcPort=? AND DstAddr=? AND DstPort=? AND Prot=?;

SQL.AggV5.Insert = INSERT INTO Agg_V5 ( RouterIP, SysUptime, Secs, Nsecs,	\
				     Flow_Sequence, Engine_Type, Engine_ID,	\
				     SrcAddr, DstAddr, NextHop, Input, Output,	\
				     dPkts, dOctets, aFirst, aLast,		\
				     SrcPort, DstPort, Tcp_Flags, Prot, TOS,	\
				     Src_As, Dst_As, Src_Mask, Dst_Mask, Stamp)	\
				   VALUES( ?, ?, ?, ?, ?, ?, ?, ?, ?,		\
					   ?, ?, ?, ?, ?, ?, ?, ?, ?,		\
					   ?, ?, ?, ?, ?, ?, ?, now());

SQL.AggV5.DeleteAged = DELETE FROM Agg_V5 WHERE Stamp < NOW() - ((?)::INTEGER ||' hours')::INTERVAL

SQL.AggV5.Aggregate = WITH newvalues AS (SELECT * FROM ###)                                                                                                                                        \
                      UPDATE agg_v5 t                                                                                                                                                                 \
                      SET                                                                                                                                                                                    \
                        dPkts=CASE when t.RouterIP IN ('TCP_Discoverer', newvalues.routerip) THEN t.dPkts + newvalues.dPkts else t.dPkts END,                                                                \
                        dOctets=CASE when t.RouterIP IN ('TCP_Discoverer', newvalues.routerip) THEN t.dOctets + newvalues.dOctets else t.dOctets END,                                                        \
                        afirst=CASE when t.RouterIP ='TCP_Discoverer' THEN newvalues.afirst WHEN t.RouterIP = newvalues.routerip then LEAST(t.afirst, newvalues.afirst) else t.afirst END,                   \
                        alast=CASE when t.RouterIP ='TCP_Discoverer' THEN newvalues.alast WHEN t.RouterIP = newvalues.routerip then GREATEST(t.alast, newvalues.alast) else t.alast END,                     \
                        tcp_flags=CASE when t.RouterIP ='TCP_Discoverer' THEN newvalues.tcp_flags WHEN t.RouterIP = newvalues.routerip then t.tcp_flags | newvalues.tcp_flags else t.tcp_flags END,          \
                        SysUptime=CASE when t.RouterIP ='TCP_Discoverer' THEN newvalues.SysUptime WHEN t.RouterIP = newvalues.routerip then GREATEST(t.SysUptime, newvalues.SysUptime) else t.SysUptime END, \
                        Secs=CASE when t.RouterIP ='TCP_Discoverer' THEN newvalues.Secs WHEN t.RouterIP = newvalues.routerip then GREATEST(t.Secs, newvalues.Secs) else t.Secs END,                          \
                        Nsecs=CASE when t.RouterIP ='TCP_Discoverer' THEN newvalues.Nsecs WHEN t.RouterIP = newvalues.routerip then GREATEST(t.Nsecs, newvalues.Nsecs) else t.Nsecs END,                     \
                        stamp=NOW(),                                                                                                                                                                         \
                        routerip=CASE when t.RouterIP ='TCP_Discoverer' AND newvalues.RouterIP <> 'TCP_Discoverer' THEN newvalues.routerip else t.routerip END                                               \
                      FROM newvalues                                                                                                                                                                         \
                      WHERE t.dstaddr = newvalues.dstaddr AND t.dstport = newvalues.dstport                                                                                                                  \
                            AND t.prot = newvalues.prot AND t.srcaddr = newvalues.srcaddr                                                                                                                    \
                            AND t.srcport = newvalues.srcport;                                                                                                                                               \
                                                                                                                                                                                                             \
                      INSERT INTO agg_v5                                                                                                                                                              \
                      SELECT * FROM ### newvalues                                                                                                                                                  \
                      WHERE NOT EXISTS                                                                                                                                                                       \
                      (SELECT * FROM agg_v5 t where t.dstaddr = newvalues.dstaddr AND t.dstport = newvalues.dstport                                                                                   \
                                                               AND t.prot = newvalues.prot AND t.srcaddr = newvalues.srcaddr                                                                                 \
                                                               AND t.srcport = newvalues.srcport)

#------------------------------------------
# NetFlow V8 default Aggregations
#------------------------------------------
SQL.Add.RawV8.ProtoPort = \
  INSERT INTO Raw_V8_ProtoPort ( RouterIP, SysUptime, Secs, Nsecs,	   \
			         Flow_Sequence, Engine_Type, Engine_ID,    \
			         Flows, dPkts, dOctets, aFirst, aLast,	   \
				 Prot, SrcPort, DstPort			   \
			       )					   \
			       VALUES( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, \
				       ?, ?, ? );

SQL.Add.RawV8.DstPrefix = \
  INSERT INTO Raw_V8_DstPrefix ( RouterIP, SysUptime, Secs, Nsecs,	   \
				 Flow_Sequence, Engine_Type, Engine_ID,	   \
				 Flows, dPkts, dOctets, aFirst, aLast,	   \
				 Dst_Prefix, Dst_Mask, Dst_As, Output	   \
			       )					   \
			       VALUES( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, \
				       ?, ?, ?, ? );

SQL.Add.RawV8.SrcPrefix = \
  INSERT INTO Raw_V8_SrcPrefix ( RouterIP, SysUptime, Secs, Nsecs,	   \
				 Flow_Sequence, Engine_Type, Engine_ID,	   \
				 Flows, dPkts, dOctets, aFirst, aLast,	   \
				 Src_Prefix, Src_Mask, Src_As, Input	   \
			       )					   \
			       VALUES( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, \
				       ?, ?, ?, ? );

SQL.Add.RawV8.Prefix = \
  INSERT INTO Raw_V8_Prefix ( RouterIP, SysUptime, Secs, Nsecs,		  \
			      Flow_Sequence, Engine_Type, Engine_ID,	  \
			      Flows, dPkts, dOctets, aFirst, aLast,	  \
			      Src_Prefix, Dst_Prefix, Src_Mask, Dst_Mask, \
			      Src_As, Dst_As, Input, Output		  \
			    )						  \
			    VALUES( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,	  \
				    ?, ?, ?, ?, ?, ?, ?, ? );


!!!!!!!!!!!!!!!!!!!! Standard NetFlow Aggregation Schemes Statements !!!!!!!!!!!!!!!!!!!!!!!

# The SrcAS Scheme

SQL.Add.SrcAS = \
  INSERT INTO SrcAS ( StartDate, StartTime, EndDate, EndTime, \
		      RouterIP, Flows, Missed,		       \
		      dPkts, dOctets, Src_As	  	       \
		    )			    	 	       \
		    VALUES( ?, ?, ?, ?, ?, ?, ?, ?, ?, ? );

# The DstAS Scheme

SQL.Add.DstAS = \
  INSERT INTO DstAS ( StartDate, StartTime, EndDate, EndTime, \
		      RouterIP, Flows, Missed,		       \
		      dPkts, dOctets, Dst_As	  	       \
		    )			    	 	       \
		    VALUES( ?, ?, ?, ?, ?, ?, ?, ?, ?, ? );


# The AS Matrix Scheme

SQL.Add.ASMatrix = \
  INSERT INTO ASMatrix ( StartDate, StartTime, EndDate, EndTime, \
			 RouterIP, Flows, Missed,		  \
		         dPkts, dOctets, Src_As, Dst_As	  \
		       )			    	 	  \
		       VALUES( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? );

# The SrcNode Scheme

SQL.Add.SrcNode = \
  INSERT INTO SrcNode ( StartDate, StartTime, EndDate, EndTime, \
			RouterIP, Flows, Missed,		\
		        dPkts, dOctets, SrcNode		        \
		      )			    		 	\
		      VALUES( ?, ?, ?, ?, ?, ?, ?, ?, ?, ? );

# The DstNode Scheme
SQL.Add.DstNode = \
  INSERT INTO DstNode ( StartDate, StartTime, EndDate, EndTime, \
			RouterIP, Flows, Missed,		\
		        dPkts, dOctets, DstNode		        \
		      )			    		 	\
		      VALUES( ?, ?, ?, ?, ?, ?, ?, ?, ?, ? );

# The HostMatrix Scheme
SQL.Add.HostMatrix = \
  INSERT INTO HostMatrix ( StartDate, StartTime, EndDate, EndTime, \
			   RouterIP, Flows, Missed,		   \
		           dPkts, dOctets, SrcNode, DstNode        \
		         )			    	 	   \
		         VALUES( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? );

# The HostProtocolMatrix Scheme

SQL.Add.HostProtocolMatrix = \
  INSERT INTO HostProtocolMatrix ( StartDate, StartTime, EndDate, EndTime, \
			   RouterIP, Flows, Missed,		   \
		           dPkts, dOctets, SrcNode, DstNode, DstPort, Prot   \
		         )			    	 	   \
		         VALUES( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? );

# The SrcInterface Scheme

SQL.Add.SrcInterface = \
  INSERT INTO SrcInt ( StartDate, StartTime, EndDate, EndTime,	\
		       RouterIP, Flows, Missed,			\
		       dPkts, dOctets, SrcInt			\
		      )			    		 	\
		      VALUES( ?, ?, ?, ?, ?, ?, ?, ?, ?, ? );

# The DstInterface Scheme
SQL.Add.DstInterface = \
  INSERT INTO DstInt ( StartDate, StartTime, EndDate, EndTime,	\
		       RouterIP, Flows, Missed,			\
		       dPkts, dOctets, DstInt			\
		      )			    		 	\
		      VALUES( ?, ?, ?, ?, ?, ?, ?, ?, ?, ? );

# The InterfaceMatrix Scheme
SQL.Add.InterfaceMatrix = \
  INSERT INTO IntMatrix ( StartDate, StartTime, EndDate, EndTime,   \
		          RouterIP, Flows, Missed,		    \
		          dPkts, dOctets, SrcInt, DstInt	    \
		         )			    		    \
		         VALUES( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? );

# The SrcPrefix Scheme
SQL.Add.SrcPrefix = \
  INSERT INTO SrcPrefix ( StartDate, StartTime, EndDate, EndTime,	 \
			  RouterIP, Flows, Missed,			 \
		          dPkts, dOctets, SrcPrefix, SrcMask,		 \
			  SrcAS, Input		        		 \
		        )			    		     	 \
		        VALUES( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? );

# The DstPrefix Scheme
SQL.Add.DstPrefix = \
  INSERT INTO DstPrefix ( StartDate, StartTime, EndDate, EndTime, 	 \
			  RouterIP, Flows, Missed,		  	 \
		          dPkts, dOctets, DstPrefix, DstMask,	  	 \
			  DstAS, Output		        	  	 \
		        )			    		  	 \
		        VALUES( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? );

# The PrefixMatrix Scheme
SQL.Add.PrefixMatrix = \
  INSERT INTO PrefixMatrix ( StartDate, StartTime, EndDate, EndTime, \
			     RouterIP, Flows, Missed,		     \
		             dPkts, dOctets,			     \
			     SrcPrefix, SrcMask, SrcAS, Input,	     \
			     DstPrefix, DstMask, DstAS, Output	     \
		           )			    		     \
		           VALUES( ?, ?, ?, ?, ?, ?, ?, ?, ?,	     \
			           ?, ?, ?, ?, ?, ?, ?, ? );

# The Protocol Scheme
SQL.Add.Protocol = \
  INSERT INTO Protocol ( StartDate, StartTime, EndDate, EndTime, \
			 RouterIP, Flows, Missed,		 \
		         dPkts, dOctets, Protocol		 \
		        )			    		 \
		        VALUES( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?  );
